{{ template "menu" .MenuName }}
<div class="render">
    <h2>Routes</h2>
    <table id="dati">
        <tr>
            <th>Package</th>
            <th>Func</th>
            <th>Type</th>
            <th>Path</th>
            <th>Methods</th>
        </tr>
    </table>
    <div id="pagination" class="mt-1"></div>
    <button class="btn mt-1" onclick="Add()">Add route</button>
</div>
<div class="dialog" id="edit-dialog">
    <div class="body">
        <header>Edit Route</header>
        <div class="content">
            <form class="layout" id="edit-route">
                <label for="package">Package</label>
                <input id="package" class="form-control">
                <label for="func">Func</label>
                <input id="func" class="form-control">
                <label for="type">Type</label>
                <select id="type" name="type" class="form-control">
                    <option value="api">Api</option>
                    <option value="be">Backend</option>
                    <option value="fe">Frontend</option>
                </select>
                <label for="methods">Methods</label>
                <input id="methods" class="form-control">
                <label>Permissions:</label>
                <div id="usertypes-checkbox">
                </div>
            </form>
        </div>
        <footer style="text-align: right;">
            <button class="btn" onclick="Save()">Save</button>
            <button class="btn-error" onclick="CloseForm()">Cancel</button>
        </footer>
    </div>
</div>
<script>
    var rows = [];
    var selectedRow;
    $(document).ready(() => {
        $("#edit-dialog").hide();
        Get("../api/usertype/getusertypes", 0).done(function(data) {
            data.Data.forEach((row) => {
                $("tr").append($("<th>" + row.Description + "</th>"));
                $("#usertypes-checkbox").append($("<input class=\"form-control\" id=\"" + row.Description + "\" type=\"checkbox\">"));
                $("#usertypes-checkbox").append($("<label for=\"" + row.Description + "\">" + row.Description + "</label>"));
            });
            $("tr").append($("<th>#</th>"));
        });
        LoadRoutes();
    });
    function LoadRoutes(page = 0) {
        while($($("#dati").children()[0]).children().length > 1) {
            $($($("#dati").children()[0]).children()[1]).remove();
        }
        Get("../api/route/getroutes?page=" + page, null).done(function(data) {
            rows = data.Data;
            rows.forEach((row) => {
                var tr = $("<tr></tr>");
                $(tr).append($("<td>" + row.Package + "</td>"));
                $(tr).append($("<td>" + row.Func + "</td>"));
                $(tr).append($("<td>" + row.Type + "</td>"));
                $(tr).append($("<td>" + row.Path + "</td>"));
                $(tr).append($("<td>" + row.Methods + "</td>"));
                row.Permissions.forEach((p) => {
                    if(p.Enabled) {
                        $(tr).append($("<td>&times;</td>"));
                    }
                    else {
                        $(tr).append($("<td></td>"));
                    }
                });
                $(tr).append($("<td><button class=\"btn-warning\" onclick=\"Edit(" + row.ID + ");\">Edit</button><button class=\"btn-error ml-1\" onclick=\"SetDeleteMessage(" + row.ID + ", '');\">Delete</button></td>"));
                $("#dati").append(tr);
            });
            //pagination
            $("#pagination").empty();
            var pagination = $("#pagination");
            for(let i = 0; i < data.PageCount; i++) {
                let active = "";
                if(i == data.Page) {
                    active = "disabled";
                }
                $(pagination).append($("<button class=\"btn ml-1 id=\"page-" + i.toString() + "\" " + active + " onclick=\"LoadRoutes(" + i.toString() + ")\">" + i.toString() + "</button>"));
            }
        }).fail(function(data) {
            ShowError(data);
        });
    }
    function Add() {
        $('#edit-dialog').show();
        selectedRow = {};
        selectedRow.IsNew = true;
    }
    function Edit(id) {
        $('#edit-dialog').show();
        SetSelectedRecord(id);
        $("#package").val(selectedRow.Package);
        $("#func").val(selectedRow.Func);
        $("#type").val(selectedRow.Type);
        $("#methods").val(selectedRow.Methods);
        selectedRow.Permissions.forEach((p) => {
            $("#" + p.UserType.Description).prop("checked", p.Enabled);
        });
        selectedRow.IsNew = false;
    }
    function CloseForm() {
        $("#edit-route")[0].reset();
        $('#edit-dialog').hide();
        selectedRow = null;
    }
    function Save() {
        //Setting the new object
        let route = {};
        if(selectedRow.IsNew) {
            route.Permissions = [];
            let count = 0;
            $('#usertypes-checkbox').children().each((c) => {
                if($($('#usertypes-checkbox').children()[c]).is("input")) {
                    route.Permissions[count] = { UserType: { Description: $($('#usertypes-checkbox').children()[c]).attr('id') }, Enabled: $($('#usertypes-checkbox').children()[c]).prop("checked") };
                    count++;
                }
            });
        }
        else {
            //Istantiate new structure for saving the route
            route = selectedRow;
            route.Permissions = [];
            $('#usertypes-checkbox').children().each((c) => {
                if($($('#usertypes-checkbox').children()[c]).is("input")) {
                    route.Permissions[route.Permissions.length] = { UserType: { Description: $($('#usertypes-checkbox').children()[c]).attr('id') }, Enabled: $($('#usertypes-checkbox').children()[c]).prop("checked") };
                }
            });
        }
        route.Package = $('#package').val();
        route.Func = $('#func').val();
        route.Type = $('#type').val();
        route.Methods = $('#methods').val();
        let func = "add";
        if((selectedRow != null) &&(selectedRow.IsNew != null) && (!selectedRow.IsNew)) {
            func = "update";
        }
        Post("route", func, route).done(function(data) {
            LoadRoutes();
        }).fail(function(data) {
            ShowError(data);
        });
        $('#edit-dialog').hide();
    }
    function OnDelete() {
        $('#delete-dialog').hide();
        Delete("route", "deleteroute", $("#delete-dialog-button").attr("refer-id")).done(function(data) {
            LoadRoutes();
        }).fail(function(data) {
            ShowError(data);
        });
    }
    function OpenDeleteDialog(id) {
        SetSelectedRecord(id);
    }
    function SetSelectedRecord(id) {
        rows.forEach((row) => {
            if(row.ID == id) {
                selectedRow = row;
                return;
            }
        });
    }
</script>
